"use strict";module.exports=(a,b)=>{function c(a,b,c){let d="";a.on("data",a=>{d+=a}),a.on("end",()=>{if(!(200<=a.statusCode&&400>a.statusCode)){let a;try{const b=JSON.parse(d);a=b.Message}catch(b){a=d}process.nextTick(()=>{const b=new Error(a);b.responseText=d,c(b)})}else if(b)process.nextTick(()=>{c(null,d)});else try{const a=JSON.parse(d);process.nextTick(()=>{c(null,a)})}catch(a){const b=new Error("Invalid JSON response");b.responseText=d,process.nextTick(()=>{c(b)})}})}function d(a,b){const c="string"==typeof a?new Error(a):a;process.nextTick(()=>{b(c)})}function e(b,e){const j=new a.HttpRequest(f),k=b.rawResponse||!1;j.method=b.method.toUpperCase(),j.path=b.path,j.region=i,j.headers=b.headers||{},j.headers["presigned-expires"]=!1,j.headers.Host=f.host,b.message&&(j.body="string"==typeof b.message?b.message:JSON.stringify(b.message));const l=new a.Signers.V4(j,h);l.addAuthorization(g,new Date);const m=new a.NodeHttpClient;m.handleRequest(j,a.config.httpOptions,a=>{k?e(null,a):c(a,!1===b.json,e)},a=>{k?e(a):d(a,e)})}const f=new a.Endpoint(b.endpoint),g=b.awsCreds||new a.EnvironmentCredentials("AWS"),{service:h}=b,{region:i}=b;return{send(a,b){if(!a)process.nextTick(()=>{b(new TypeError("Missing or invalid parameters"))});else if(!a.method)process.nextTick(()=>{b(new TypeError("Missing method"))});else try{e(a,b)}catch(a){process.nextTick(()=>{b(a)})}}}};