"use strict";var _logger=_interopRequireDefault(require("../utils/logger"));Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.normalizeHttpRequestBeforeHandler=exports.normalizeRequest=void 0;function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const normalizeRequest=a=>{const{headers:b,qs:c,body:d}=a;let e=null;if(!b&&null===c)return e;null!==c&&(e=c);const f=b["Content-Type"]||b["content-type"];if(!f)return e;if(f.startsWith("application/json"))try{e={...e,...JSON.parse(d)}}catch(a){throw new Error("Content type defined as JSON but an invalid JSON was provided")}return e};exports.normalizeRequest=normalizeRequest;const normalizeHttpRequestBeforeHandler=(a,b)=>{const c={headers:a.event.headers,qs:a.event.queryStringParameters,body:a.event.body};a.event.input=normalizeRequest(c),_logger.default.addMeta({queryStringParameters:c.qs,body:c.body,requestId:a.event.requestContext?a.event.requestContext.requestId:null,tags:{path:a.event.path,httpMethod:a.event.httpMethod}}),b()};exports.normalizeHttpRequestBeforeHandler=normalizeHttpRequestBeforeHandler;const normalizeHttpRequest=()=>({before:(a,b)=>normalizeHttpRequestBeforeHandler(a,b)});var _default=normalizeHttpRequest;exports.default=_default;